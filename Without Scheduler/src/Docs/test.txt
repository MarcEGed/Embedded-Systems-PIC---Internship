#include <18F46K22.h>
#fuses INTRC_IO, NOWDT, NOLVP, NOPROTECT
#use delay(clock=16MHz)
#use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7)

// === External Libraries ===
#include "sh1106.c"      // OLED driver
#include "joystick.h"    // Your joystick library

// === Screen and Movement Settings ===
#define SCREEN_WIDTH    128
#define SCREEN_HEIGHT   64
#define SQUARE_SIZE     5
#define MOVE_SPEED      2

// === Deadzone Settings for Joystick (0–255 range) ===
#define X_DEADZONE_MIN 120
#define X_DEADZONE_MAX 135
#define Y_DEADZONE_MIN 120
#define Y_DEADZONE_MAX 135

// === Square Position (initialized to center) ===
int x_pos = SCREEN_WIDTH / 2;
int y_pos = SCREEN_HEIGHT / 2;

// === Update Square Position Based on Joystick Input ===
void update_position() {
    int x = get_Joystick_X();  // 0–255
    int y = get_Joystick_Y();  // 0–255

    // Print to serial
    printf("X: %u\tY: %u\r\n", x, y);

    // LEFT
    if (x < X_DEADZONE_MIN && x_pos > 0)
        x_pos -= MOVE_SPEED;
    // RIGHT
    else if (x > X_DEADZONE_MAX && x_pos < SCREEN_WIDTH - SQUARE_SIZE)
        x_pos += MOVE_SPEED;

    // DOWN (y decreases downward on screen)
    if (y < Y_DEADZONE_MIN && y_pos < SCREEN_HEIGHT - SQUARE_SIZE)
        y_pos += MOVE_SPEED;
    // UP
    else if (y > Y_DEADZONE_MAX && y_pos > 0)
        y_pos -= MOVE_SPEED;

    if (x_pos < 0)
        x_pos = 0;
    if (x_pos > SCREEN_WIDTH - SQUARE_SIZE)
        x_pos = SCREEN_WIDTH - SQUARE_SIZE;

    if (y_pos < 0)
        y_pos = 0;
    if (y_pos > SCREEN_HEIGHT - SQUARE_SIZE)
        y_pos = SCREEN_HEIGHT - SQUARE_SIZE;
}

// === Draw 5x5 Square ===
void draw_square() {
    for (int i = 0; i < SQUARE_SIZE; i++) {
        for (int j = 0; j < SQUARE_SIZE; j++) {
            sh1106_draw_pixel(x_pos + i, y_pos + j, 1);
        }
    }
}

// === Main Program ===
void main() {
    sh1106_init();
    joystick_init();  // Initialize joystick pins

    while (TRUE) {
        sh1106_clear_buffer();

        update_position();
        draw_square();

        sh1106_update_screen();
        delay_ms(50);  // Control movement speed
    }
}